name: Wheels
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - urocksdb

defaults:
  run:
    shell: bash

jobs:
  #  build_sdist:
  #    name: Build SDist
  #    runs-on: ubuntu-latest
  #    steps:
  #    - uses: actions/checkout@v2
  #      with:
  #        submodules: true
  #    - uses: actions/setup-python@v2
  #      with:
  #        python-version: 3.7
  #
  #    - name: Ensure latest rocksdb
  #      run: |
  #        echo `pwd`
  #        cd lib/rocksdb
  #        git checkout master
  #        git pull
  #        cd ../..
  #
  #    - name: Install deps
  #      run: python -m pip install twine build
  #
  #    - name: Install libraries
  #      run: |
  #        sudo apt-get install -y \
  #          cmake \
  #          libgflags-dev libsnappy-dev liblz4-dev libzstd-dev
  #
  #    - name: Build SDist
  #      run: python -m build -s
  #
  #    - name: Check metadata
  #      run: twine check dist/*
  #
  #    - uses: actions/upload-artifact@v2
  #      with:
  #        path: dist/*.tar.gz


  build_wheels:
    name: Build wheel for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [x86_64]

    steps:
      - name: Checkout urocksdb 
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Ensure latest rocksdb
        run: |
          echo `pwd`
          cd lib/rocksdb
          git checkout master
          git pull
          cd ../..

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Build wheel
        env: 
          CIBW_ARCHS_LINUX: ${{matrix.arch}}
          CIBW_BUILD: "cp37-*"
          CIBW_BEFORE_ALL_LINUX: apt-get install -y cmake libgflags-dev libsnappy-dev liblz4-dev libzstd-dev
          CIBW_BEFORE_BUILD: "pip install flake8 pytest"
        
        run: bash .github/scripts/build_wheels.sh

      - name: Show files
        run: ls -lh wheelhouse
        shell: bash

      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl


#  upload_all:
#    name: Upload if release
#    needs: [build_wheels, build_sdist]
#    runs-on: ubuntu-latest
#    if: github.event_name == 'release' && github.event.action == 'published'
#
#    steps:
#    - uses: actions/setup-python@v2
#
#    - uses: actions/download-artifact@v2
#      with:
#        name: artifact
#        path: dist
#
#    - uses: pypa/gh-action-pypi-publish@v1.4.1
#      with:
#        user: __token__
#        password: ${{ secrets.pypi_password }}
#


